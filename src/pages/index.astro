---
import * as prismicH from '@prismicio/helpers';

import { getHomepage } from '../lib/prismicio';

import { Image } from '@astrojs/image/components';
import placeholderImage from '../../public/images/header_elements/present.png';

import Layout from '../layouts/Layout.astro';
import SliceZone from '../components/SliceZone.astro';
import HolidaySnowtacularLogo from '../components/HolidaySnowtacularLogo.astro';
import RegistrationButton from '../components/RegistrationButton.astro';
import HeroParallax from '../components/HeroParallax.astro';

const page = await getHomepage();

const bodyHTML = prismicH.asHTML(page.data.body);
const bodyText = prismicH.asText(page.data.body);
---

<Layout
  title="Holiday Snowtacular - Web Dev Charity Fundraiser"
  description={bodyText}
>
  <main class="grid-container">
    <section class="hero">
      <div class="hero-column">
        <div class="kicker">
          {
            page.data.heroEyebrow.map((item, i) => (
              <>
                {i > 0 ? <span class="spacer"> | </span> : ''}

                <span>{item.text}</span>
              </>
            ))
          }
        </div>

        <h1 class="visually-hidden">Holiday Snowtacular</h1>
        <div class="snowtacular-logo">
          <HolidaySnowtacularLogo />
        </div>

        <div class="body-html">
          <Fragment set:html="bodyHTML" />
        </div>

        <div class="cta">
          <p class="cta-description">{page.data.ctaDescription}</p>
          <RegistrationButton>
            {page.data.buttonText}
            <span class="icon">
              <svg viewBox="0 0 17 16" fill="none" role="presentation">
                <path
                  fill="#fff"
                  d="M8 14.9a1 1 0 0 1-.3-.7c0-.3.1-.5.3-.7l4.9-5H1.7a1 1 0 0 1-.7-.2 1 1 0 0 1-.3-.7c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3H13l-5-5a1 1 0 0 1-.2-.6c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3.3 0 .5.1.7.3L16 6.9l.2.3a1.2 1.2 0 0 1 0 .8s0 .2-.2.3l-6.6 6.6a1 1 0 0 1-.7.3 1 1 0 0 1-.7-.3Z"
                ></path>
              </svg>
            </span>
          </RegistrationButton>
        </div>
      </div>
      <HeroParallax />
    </section>
    <div class="slice-container">
      <SliceZone slices={page.data.slices} />
    </div>
  </main>
</Layout>

<style lang="scss">
  @import '../styles/mixins.scss';

  .grid-container {
    display: grid;
    place-items: center;
    padding: var(--space-s-m);
  }
  .slice-container {
    display: grid;
    background-color: var(--box-color);
    padding: var(--space-m-xl);
    margin: var(--space-xs-s);
    gap: var(--space-2xl-3xl);
    border-radius: var(--space-s-m);
    max-width: 1136px;
    width: 100%;
  }

  .hero {
    --min: 50ch;
    --gap: var(--space-s);

    display: grid;
    grid-gap: 0 var(--gap);
    grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));
    max-width: 1136px;
    width: 100%;
  }

  .hero-column {
    display: grid;
    place-content: center;
    font-family: var(--header-font);
    padding-block-end: var(--space-2xl);
    margin-inline: auto;
    text-align: center;
    width: 100%;
    z-index: 1;

    @media (min-width: 840px) {
      gap: var(--space-s);
    }

    > * {
      margin-block-start: var(--space-s-m);
    }

    .kicker {
      font-size: var(--step-0);
      margin-top: 0;
      order: 1;
      @media (min-width: 640px) {
        order: 0;
      }

      .spacer {
        margin-inline: var(--space-2xs);
      }
    }

    @media (min-width: 640px) {
      padding-block: var(--space-2xl);
    }
  }

  .snowtacular-logo {
    width: 80%;
    margin: 0 auto;
  }

  .body-html {
    font-size: var(--step-1);
    line-height: var(--step-0);
    font-family: var(--body-font);
    font-weight: 400;
    color: var(--color-white);
    max-width: 30ch;
    order: 3;
  }

  .cta {
    @include forced-colors-outline();

    --cta-bg: var(--accent-constant-red);
    --cta-text: var(--accent-constant-text);
    background-color: var(--cta-bg);
    color: var(--cta-text);
    align-items: center;
    border-radius: 1rem;
    font-size: var(--step--1);
    font-family: var(--body-font);
    margin-inline: auto;
    padding: var(--space-3xs) var(--space-xs) var(--space-xs);
    order: 3;
    @media (min-width: 640px) {
      display: grid;
      grid-template-columns: 1fr fit-content(20ch);
      padding: var(--space-3xs) var(--space-3xs-2xs);
      border-radius: 3rem;
    }
  }

  .cta-description {
    color: var(--white);
    font-size: var(--step--3);
    font-weight: 600;
    margin: var(--space-2xs);
  }

  .icon {
    path {
      @include forced-colors-fill-current-color();
    }
  }
</style>

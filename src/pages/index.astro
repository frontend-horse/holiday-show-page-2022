---
import * as prismicH from '@prismicio/helpers'

import { getHomepage } from '../lib/prismicio'

import Layout from '../layouts/Layout.astro'
import SliceZone from '../components/SliceZone.astro'
import HolidaySnowtacularLogo from '../components/HolidaySnowtacularLogo.astro'
import RegistrationButton from '../components/RegistrationButton.astro'
import HeroParallax from '../components/HeroParallax.astro'

const page = await getHomepage()
const {
	body,
	title,
	buttonText,
	ctaDescription,
	heroEyebrow,
	metadescription,
	metatitle,
	ogImage,
	slices
} = page.data
const bodyHTML = prismicH.asHTML(body)
---

<Layout title='Holiday Snowtacular - Web Dev Charity Fundraiser'>
	<main class='grid-container'>
		<section class='hero'>
			<div class='hero-column'>
				<div class='kicker'>
					{
						heroEyebrow.map((item, i) => (
							<>
								{i > 0 ? <span class='spacer'> | </span> : ''}

								<span>{item.text}</span>
							</>
						))
					}
				</div>

				<h1 class='visually-hidden'>Holiday Snowtacular</h1>
				<HolidaySnowtacularLogo />

				<div class='body-html'>
					<Fragment set:html='bodyHTML' />
				</div>

				<div class='cta'>
					<p class='cta-description'>{ctaDescription}</p>
					<RegistrationButton>
						{buttonText}
						<span class='icon'>
							<svg viewBox='0 0 17 16' fill='none' role='presentation'>
								<path
									fill='#fff'
									d='M8 14.9a1 1 0 0 1-.3-.7c0-.3.1-.5.3-.7l4.9-5H1.7a1 1 0 0 1-.7-.2 1 1 0 0 1-.3-.7c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3H13l-5-5a1 1 0 0 1-.2-.6c0-.3.1-.5.3-.7.2-.2.4-.3.7-.3.3 0 .5.1.7.3L16 6.9l.2.3a1.2 1.2 0 0 1 0 .8s0 .2-.2.3l-6.6 6.6a1 1 0 0 1-.7.3 1 1 0 0 1-.7-.3Z'
								></path>
							</svg>
						</span>
					</RegistrationButton>
				</div>
			</div>
			<div class='hero-column'>
				<HeroParallax />
			</div>
		</section>
		<div class='slice-container'>
			<SliceZone slices={slices} />
		</div>
	</main>
</Layout>

<style lang='scss'>
	.grid-container {
		display: grid;
		place-items: center;
		padding: var(--space-s-m);
		--mouseX: 0.5;
		--mouseY: 0.5;
		--scroll: 0;
	}
	.slice-container {
		display: grid;
		background-color: var(--box-color);
		padding: var(--space-m-xl);
		margin: var(--space-xs-s);
		gap: var(--space-2xl-3xl);
		border-radius: var(--space-s-m);
		max-width: 1136px;
		width: 100%;
	}

	.hero {
		--min: 50ch;
		--gap: 1rem;

		display: grid;
		grid-gap: 0 var(--gap);
		grid-template-columns: repeat(auto-fit, minmax(min(100%, var(--min)), 1fr));
		max-width: 1136px;
		width: 100%;

		.hero-column:first-child {
			display: grid;
			gap: var(--space-xs);
			place-content: center;
			font-family: var(--header-font);
			padding-block: var(--space-2xl);
			margin-inline: auto;
			text-align: center;
			width: 100%;
			z-index: 1;
			> * {
				margin-block-start: 1.5rem;
			}
			.kicker {
				font-size: var(--step-0);
				margin-top: 0;

				.spacer {
					margin-inline: var(--space-2xs);
				}
			}
		}
	}

	.body-html {
		font-size: var(--step-1);
		line-height: var(--step-0);
		font-family: var(--body-font);
		font-weight: 400;
		color: var(--color-white);
		max-width: 30ch;
	}

	.cta {
		align-items: center;
		background: var(--hero-cta-background);
		border-radius: 3rem;
		color: var(--black);
		font-size: var(--step--1);
		display: none;
		font-family: var(--body-font);
		margin-inline: auto;
		padding-block: 0.25rem;
		padding-inline: 0.4rem;
		padding-inline-start: 0.75rem;
		width: fit-content;
		@media (min-width: 640px) {
			display: grid;
			grid-template-columns: 1fr fit-content(20ch);
		}
	}
	p.cta-description {
		color: var(--white);
		padding-inline: 0.65rem;
		font-size: var(--step--2);
		font-weight: 600;
		margin: 0;
	}
</style>

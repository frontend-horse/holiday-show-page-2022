---
import * as prismicH from '@prismicio/helpers';
import { getAllSponsors } from '../lib/prismicio';
import { SponsorListSlice } from '../../types.generated';

const slice = Astro.props.slice as SponsorListSlice;

const sponsors = await getAllSponsors();

const bodyHTML = prismicH.asHTML(slice.primary.body);
---

<section id="sponsors" aria-labelledby="sponsors-heading" class="sponsors">
  <header>
    <span class="heading-eyebrow">{slice.primary.eyebrow}</span>
    <h2 id="sponsors-heading">{slice.primary.heading}</h2>
  </header>

  <div>
    <Fragment set:html="bodyHTML" />
    <ul class="sponsor-grid">
      {
        sponsors.map((sponsor) => (
          <li class="sponsor">
            <a href={`/sponsor/${sponsor.uid}`} rel="prefetch">
              <img src={sponsor.data.logo.url} alt={sponsor.data.name} />
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</section>

<style lang="scss">
  @import '../styles/mixins.scss';

  .sponsors {
    .sponsor-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      grid-gap: var(--space-s);
    }

    .sponsor {
      position: relative;
      background: rgba(0, 0, 0, 0.25);
      padding-block: var(--space-s);
      padding-inline: var(--space-s-m);
      display: grid;
      place-content: center;
      transition: background 0.2s ease;
      border-radius: 0.5rem;
      &:hover {
        @media (forced-colors: none) {
          background: rgba(0, 0, 0, 0.3);
        }
      }

      @include forced-colors-background();

      a {
        &::before {
          content: '';
          position: absolute;
          inset: 0;
        }
      }
      img {
        display: block;
        max-width: 100%;
        padding: 0;
        margin: 0;
        width: auto;
        height: 100px;
        object-fit: contain;
      }
    }
  }
</style>
